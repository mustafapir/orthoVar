width=c(0, info$tbl$pfam_end-info$tbl$pfam_start, 0),
names=c("", info$dom, "")))
features1$fill <- c("#FF1F5B", colors[1:length(info$tbl$pfam_start)], "#009ADE")
features1$height <- c(0, rep(0.2, length(info$tbl$pfam_start)), 0)
glist[i]<-gene1.rot
flist[i]<-features1
}
lolliplot(glist,
flist,
yaxis=FALSE, ylab = protein_id, type = "pie")
}
loliplot(ort, protein_id = c("NP_000545", "NP_510365"), organisms = c("Homo sapiens", "Caenorhabditis elegans"))
devtools::document()
devtools::install_github("mustafapir/orthoVar")
ort<-data.frame(`Caenorhabditis elegans_ID` = c("NP_510365", "NP_510365", "NP_510365", "NP_510365", "NP_510365"), `Caenorhabditis elegans_aapos` = c(80, 80, 256, 256, 80),
`Caenorhabditis elegans_from` = c("P", "P", "P", "P", "P"), `Caenorhabditis elegans_to` = c("S", "S", "T", "T", "S"),
`Homo sapiens_ID` = c("NP_000545", "NP_000545", "NP_000545", "NP_000545", "NP_000545"), `Homo sapiens_aapos` = c(64, 64, 272, 272, 64),
`Homo sapiens_from` = c("P", "P", "P", "P", "P"), `Homo sapiens_to` = c("A", "T", "T", "S", "A"), msa_id = c(20,20,20,20,21),
check.names = FALSE)
drawProt(ort, protein_id = c("NP_000545", "NP_510365"), organisms = c("Homo sapiens", "Caenorhabditis elegans"))
library(orthoVar)
drawProt(ort, protein_id = c("NP_000545", "NP_510365"), organisms = c("Homo sapiens", "Caenorhabditis elegans"))
devtools::document()
devtools::install_github("mustafapir/orthoVar")
library(orthoVar)
ort<-data.frame(`Caenorhabditis elegans_ID` = c("NP_510365", "NP_510365", "NP_510365", "NP_510365", "NP_510365"), `Caenorhabditis elegans_aapos` = c(80, 80, 256, 256, 80),
`Caenorhabditis elegans_from` = c("P", "P", "P", "P", "P"), `Caenorhabditis elegans_to` = c("S", "S", "T", "T", "S"),
`Homo sapiens_ID` = c("NP_000545", "NP_000545", "NP_000545", "NP_000545", "NP_000545"), `Homo sapiens_aapos` = c(64, 64, 272, 272, 64),
`Homo sapiens_from` = c("P", "P", "P", "P", "P"), `Homo sapiens_to` = c("A", "T", "T", "S", "A"), msa_id = c(20,20,20,20,21),
check.names = FALSE)
drawProt(ort, protein_id = c("NP_000545", "NP_510365"), organisms = c("Homo sapiens", "Caenorhabditis elegans"))
devtools::document()
devtools::install_github("mustafapir/orthoVar")
library(orthoVar)
ort<-data.frame(`Caenorhabditis elegans_ID` = c("NP_510365", "NP_510365", "NP_510365", "NP_510365", "NP_510365"), `Caenorhabditis elegans_aapos` = c(80, 80, 256, 256, 80),
`Caenorhabditis elegans_from` = c("P", "P", "P", "P", "P"), `Caenorhabditis elegans_to` = c("S", "S", "T", "T", "S"),
`Homo sapiens_ID` = c("NP_000545", "NP_000545", "NP_000545", "NP_000545", "NP_000545"), `Homo sapiens_aapos` = c(64, 64, 272, 272, 64),
`Homo sapiens_from` = c("P", "P", "P", "P", "P"), `Homo sapiens_to` = c("A", "T", "T", "S", "A"), msa_id = c(20,20,20,20,21),
check.names = FALSE)
drawProt(ort, protein_id = c("NP_000545", "NP_510365"), organisms = c("Homo sapiens", "Caenorhabditis elegans"))
library(orthoVar)
msa<-orthoMSA(species = "Caenorhabditis elegans")
structure(list(`Homo sapiens_ID` = c("NP_001123318", "NP_001123318",
"NP_001123318", "NP_001123318", "NP_001123318", "NP_001123318",
"NP_001123318", "NP_001123318", "NP_001123318"), `Homo sapiens_aapos` = c(344L,
344L, 402L, 409L, 595L, 617L, 1754L, 2008L, 2008L), `Homo sapiens_from` = c("T",
"T", "G", "S", "V", "S", "A", "P", "P"), `Homo sapiens_to` = c("I",
"T", "R", "S", "V", "S", "T", "P", "A"), `Caenorhabditis elegans_ID` = c("NP_001023079",
"NP_001023079", "NP_001023079", "NP_001023079", "NP_001023079",
"NP_001023079", "NP_001023079", "NP_001368449", "NP_001368449"
), `Caenorhabditis elegans_aapos` = c(307L, 307L, 365L, 372L,
544L, 566L, 1627L, 139L, 139L), `Caenorhabditis elegans_from` = c("T",
"T", "G", "S", "V", "S", "A", "P", "P"), `Caenorhabditis elegans_to` = c("M",
"M", "R", "L", "D", "P", "T", "S", "S"), msa_id = c(3827, 3827,
3827, 3827, 3827, 3827, 3827, 32049, 32049)), .internal.selfref = <pointer: 0x55bf15d88350>, row.names = c(NA,
-9L), class = c("data.table", "data.frame"))
tbl<-structure(list(`Homo sapiens_ID` = c("NP_001123318", "NP_001123318",
"NP_001123318", "NP_001123318", "NP_001123318", "NP_001123318",
"NP_001123318", "NP_001123318", "NP_001123318"), `Homo sapiens_aapos` = c(344L,
344L, 402L, 409L, 595L, 617L, 1754L, 2008L, 2008L), `Homo sapiens_from` = c("T",
"T", "G", "S", "V", "S", "A", "P", "P"), `Homo sapiens_to` = c("I",
"T", "R", "S", "V", "S", "T", "P", "A"), `Caenorhabditis elegans_ID` = c("NP_001023079",
"NP_001023079", "NP_001023079", "NP_001023079", "NP_001023079",
"NP_001023079", "NP_001023079", "NP_001368449", "NP_001368449"
), `Caenorhabditis elegans_aapos` = c(307L, 307L, 365L, 372L,
544L, 566L, 1627L, 139L, 139L), `Caenorhabditis elegans_from` = c("T",
"T", "G", "S", "V", "S", "A", "P", "P"), `Caenorhabditis elegans_to` = c("M",
"M", "R", "L", "D", "P", "T", "S", "S"), msa_id = c(3827, 3827,
3827, 3827, 3827, 3827, 3827, 32049, 32049)), .internal.selfref = <pointer: 0x55bf15d88350>, row.names = c(NA,
-9L), class = c("data.table", "data.frame"))
tbl<-structure(list(`Homo sapiens_ID` = c("NP_001123318", "NP_001123318",
"NP_001123318", "NP_001123318", "NP_001123318", "NP_001123318",
"NP_001123318", "NP_001123318", "NP_001123318"), `Homo sapiens_aapos` = c(344L,
344L, 402L, 409L, 595L, 617L, 1754L, 2008L, 2008L), `Homo sapiens_from` = c("T",
"T", "G", "S", "V", "S", "A", "P", "P"), `Homo sapiens_to` = c("I",
"T", "R", "S", "V", "S", "T", "P", "A"), `Caenorhabditis elegans_ID` = c("NP_001023079",
"NP_001023079", "NP_001023079", "NP_001023079", "NP_001023079",
"NP_001023079", "NP_001023079", "NP_001368449", "NP_001368449"
), `Caenorhabditis elegans_aapos` = c(307L, 307L, 365L, 372L,
544L, 566L, 1627L, 139L, 139L), `Caenorhabditis elegans_from` = c("T",
"T", "G", "S", "V", "S", "A", "P", "P"), `Caenorhabditis elegans_to` = c("M",
"M", "R", "L", "D", "P", "T", "S", "S"), msa_id = c(3827, 3827,
3827, 3827, 3827, 3827, 3827, 32049, 32049)), .internal.selfref = <pointer: 0x55bf15d88350>, row.names = c(NA,
-9L), class = c("data.table", "data.frame"))
tbl<-structure(list(`Homo sapiens_ID` = c("NP_001123318", "NP_001123318", "NP_001123318", "NP_001123318", "NP_001123318", "NP_001123318", "NP_001123318", "NP_001123318", "NP_001123318"), `Homo sapiens_aapos` = c(344L, 344L, 402L, 409L, 595L, 617L, 1754L, 2008L, 2008L), `Homo sapiens_from` = c("T", "T", "G", "S", "V", "S", "A", "P", "P"), `Homo sapiens_to` = c("I", "T", "R", "S", "V", "S", "T", "P", "A"), `Caenorhabditis elegans_ID` = c("NP_001023079", "NP_001023079", "NP_001023079", "NP_001023079", "NP_001023079", "NP_001023079", "NP_001023079", "NP_001368449", "NP_001368449"), `Caenorhabditis elegans_aapos` = c(307L, 307L, 365L, 372L, 544L, 566L, 1627L, 139L, 139L), `Caenorhabditis elegans_from` = c("T", "T", "G", "S", "V", "S", "A", "P", "P"), `Caenorhabditis elegans_to` = c("M", "M", "R", "L", "D", "P", "T", "S", "S"), msa_id = c(3827, 3827, 3827, 3827, 3827, 3827, 3827, 32049, 32049)), .internal.selfref = <pointer: 0x55bf15d88350>, row.names = c(NA, -9L), class = c("data.table", "data.frame"))
tbl<-structure(list(`Homo sapiens_ID` = c("NP_001123318", "NP_001123318", "NP_001123318", "NP_001123318", "NP_001123318", "NP_001123318", "NP_001123318", "NP_001123318", "NP_001123318"), `Homo sapiens_aapos` = c(344L, 344L, 402L, 409L, 595L, 617L, 1754L, 2008L, 2008L), `Homo sapiens_from` = c("T", "T", "G", "S", "V", "S", "A", "P", "P"), `Homo sapiens_to` = c("I", "T", "R", "S", "V", "S", "T", "P", "A"), `Caenorhabditis elegans_ID` = c("NP_001023079", "NP_001023079", "NP_001023079", "NP_001023079", "NP_001023079", "NP_001023079", "NP_001023079", "NP_001368449", "NP_001368449"), `Caenorhabditis elegans_aapos` = c(307L, 307L, 365L, 372L, 544L, 566L, 1627L, 139L, 139L), `Caenorhabditis elegans_from` = c("T", "T", "G", "S", "V", "S", "A", "P", "P"), `Caenorhabditis elegans_to` = c("M", "M", "R", "L", "D", "P", "T", "S", "S"), msa_id = c(3827, 3827, 3827, 3827, 3827, 3827, 3827, 32049, 32049)), .internal.selfref = <pointer: 0x55bf15d88350>, row.names = c(NA, -9L), class = c("data.table", "data.frame"))
tbl<-structure(list(`Homo sapiens_ID` = c("NP_001123318", "NP_001123318", "NP_001123318", "NP_001123318", "NP_001123318", "NP_001123318", "NP_001123318", "NP_001123318", "NP_001123318"), `Homo sapiens_aapos` = c(344L, 344L, 402L, 409L, 595L, 617L, 1754L, 2008L, 2008L), `Homo sapiens_from` = c("T", "T", "G", "S", "V", "S", "A", "P", "P"), `Homo sapiens_to` = c("I", "T", "R", "S", "V", "S", "T", "P", "A"), `Caenorhabditis elegans_ID` = c("NP_001023079", "NP_001023079", "NP_001023079", "NP_001023079", "NP_001023079", "NP_001023079", "NP_001023079", "NP_001368449", "NP_001368449"), `Caenorhabditis elegans_aapos` = c(307L, 307L, 365L, 372L, 544L, 566L, 1627L, 139L, 139L), `Caenorhabditis elegans_from` = c("T", "T", "G", "S", "V", "S", "A", "P", "P"), `Caenorhabditis elegans_to` = c("M", "M", "R", "L", "D", "P", "T", "S", "S"), msa_id = c(3827, 3827, 3827, 3827, 3827, 3827, 3827, 32049, 32049)), .internal.selfref = "<pointer: 0x55bf15d88350>", row.names = c(NA, -9L), class = c("data.table", "data.frame"))
View(tbl)
protein_id<-c("NP_001123318", "NP_001023079")
drawProt<-function(table, protein_id, organisms){
glist<-list()
flist<-list()
for(i in 1:length(protein_id)){
info<-getinfo(protid = protein_id[i], organism = organisms[i])
colors<-c("#FF1F5B","#009ADE")
table<-table[table[[paste0(organisms[i], "_ID")]] == protein_id[i],]
SNP <- table[[paste0(organisms[i], "_aapos")]]
gene1 <- GenomicRanges::GRanges("chr1", IRanges(SNP, width=1, names=paste0(table[[paste0(organisms[i], "_from")]],
table[[paste0(organisms[i], "_aapos")]],
table[[paste0(organisms[i], "_to")]])))
gene1$border <- sample(c("gray30"), length(SNP), replace=TRUE)
gene1.rot <- gene1
gene1.rot$label.parameter.rot <- 45
gene1.rot$SNPsideID<-"top"
features1 <- GenomicRanges::GRanges("chr1", IRanges(start=c(1, info$tbl$pfam_start, info$len),
width=c(0, info$tbl$pfam_end-info$tbl$pfam_start, 0),
names=c("", info$dom, "")))
features1$fill <- c("#FF1F5B", colors[1:length(info$tbl$pfam_start)], "#009ADE")
features1$height <- c(0, rep(0.2, length(info$tbl$pfam_start)), 0)
glist[i]<-gene1.rot
flist[i]<-features1
}
trackViewer::lolliplot(glist,
flist,
yaxis=FALSE, ylab = protein_id, type = "pie")
}
organisms<-c("Homo sapiens", "Caenorhabditis elegans")
table<-tbl
glist<-list()
flist<-list()
getinfo<-function(protid, organism){
sh<-shortnames(organism, "")
mart <- biomaRt::useEnsembl("ensembl", paste0(sh[1], "_gene_ensembl"))
bm<-biomaRt::getBM(c("uniprotswissprot","refseq_peptide","pfam","pfam_start","pfam_end"), "refseq_peptide", protid, mart)
url <- paste0("http://pfam.xfam.org/protein/", unique(bm$uniprotswissprot))
len <- url %>%
rvest::read_html() %>%
rvest::html_nodes(xpath='//*[@id="proteinSummaryBlock"]/div[2]/table[1]/tbody/tr[3]/td[2]')
len<-as.numeric(gsub("[^0-9]", "", len, perl = TRUE))
url <- paste0("http://pfam.xfam.org/family/", unique(bm$pfam))
dom<-c()
for(i in 1:length(url)){
domx <- url[i] %>%
rvest::read_html() %>%
rvest::html_nodes(xpath='//*[@id="tabTitle"]/h1/em') %>%
as.character() %>%
stringr::str_extract("(?<=>)(.*?)(?=<)")
dom<-c(dom, domx)
}
list(tbl = bm, len = len, dom = dom)
}
shortnames<-function(species1, species){
allsp<-c(species1, species)
gsub('(\\b\\pL).*? ', '\\L\\1', allsp, perl = TRUE)
}
i<-1
info<-getinfo(protid = protein_id[i], organism = organisms[i])
library(magrittr)
info<-getinfo(protid = protein_id[i], organism = organisms[i])
colors<-c("#FF1F5B","#009ADE")
table<-table[table[[paste0(organisms[i], "_ID")]] == protein_id[i],]
SNP <- table[[paste0(organisms[i], "_aapos")]]
gene1 <- GenomicRanges::GRanges("chr1", IRanges(SNP, width=1, names=paste0(table[[paste0(organisms[i], "_from")]],
table[[paste0(organisms[i], "_aapos")]],
table[[paste0(organisms[i], "_to")]])))
gene1$border <- sample(c("gray30"), length(SNP), replace=TRUE)
gene1.rot <- gene1
gene1.rot$label.parameter.rot <- 45
gene1.rot$SNPsideID<-"top"
features1 <- GenomicRanges::GRanges("chr1", IRanges(start=c(1, info$tbl$pfam_start, info$len),
width=c(0, info$tbl$pfam_end-info$tbl$pfam_start, 0),
names=c("", info$dom, "")))
info$tbl$pfam_start
info$len
View(info)
info[["dom"]]
info[["tbl"]]
tbl<-structure(list(`Homo sapiens_ID` = c("NP_004320", "NP_004320",
"NP_004320"), `Homo sapiens_aapos` = c(34L, 34L, 220L), `Homo sapiens_from` = c("G",
"G", "S"), `Homo sapiens_to` = c("G", "R", "P"), `Caenorhabditis elegans_ID` = c("NP_495271",
"NP_495271", "NP_495271"), `Caenorhabditis elegans_aapos` = c(41L,
41L, 251L), `Caenorhabditis elegans_from` = c("G", "G", "S"),
`Caenorhabditis elegans_to` = c("E", "E", "F"), msa_id = c(44132,
44132, 44132)), .internal.selfref = "<pointer: 0x55bf15d88350>", row.names = c(NA,
-3L), class = c("data.table", "data.frame"))
glist<-list()
flist<-list()
info<-getinfo(protid = protein_id[i], organism = organisms[i])
protein_id<-c("NP_004320", "NP_495271")
info<-getinfo(protid = protein_id[i], organism = organisms[i])
View(info)
View(info)
colors<-c("#FF1F5B","#009ADE")
table<-table[table[[paste0(organisms[i], "_ID")]] == protein_id[i],]
SNP <- table[[paste0(organisms[i], "_aapos")]]
table<-table[table[[paste0(organisms[i], "_ID")]] == protein_id[i],]
table<-tbl
table<-table[table[[paste0(organisms[i], "_ID")]] == protein_id[i],]
SNP <- table[[paste0(organisms[i], "_aapos")]]
gene1 <- GRanges("chr1", IRanges(SNP, width=1, names=paste0(ort[[paste0(organisms[i], "_from")]],
ort[[paste0(organisms[i], "_aapos")]],
ort[[paste0(organisms[i], "_to")]])))
table<-tbl
table<-table[table[[paste0(organisms[i], "_ID")]] == protein_id[i],]
SNP <- table[[paste0(organisms[i], "_aapos")]]
gene1 <- GenomicRanges::GRanges("chr1", IRanges(SNP, width=1, names=paste0(table[[paste0(organisms[i], "_from")]],
table[[paste0(organisms[i], "_aapos")]],
table[[paste0(organisms[i], "_to")]])))
gene1$border <- sample(c("gray30"), length(SNP), replace=TRUE)
gene1.rot <- gene1
gene1.rot$label.parameter.rot <- 45
gene1.rot$SNPsideID<-"top"
features1 <- GenomicRanges::GRanges("chr1", IRanges(start=c(1, info$tbl$pfam_start, info$len),
width=c(0, info$tbl$pfam_end-info$tbl$pfam_start, 0),
names=c("", info$dom, "")))
features1$fill <- c("#FF1F5B", colors[1:length(info$tbl$pfam_start)], "#009ADE")
features1$height <- c(0, rep(0.2, length(info$tbl$pfam_start)), 0)
glist[i]<-gene1.rot
flist[i]<-features1
trackViewer::lolliplot(glist,
flist,
yaxis=FALSE, ylab = protein_id, type = "pie")
i<-2
glist<-list()
flist<-list()
info<-getinfo(protid = protein_id[i], organism = organisms[i])
info<-getinfo(protid = protein_id[i], organism = organisms[i])
colors<-c("#FF1F5B","#009ADE")
table<-table[table[[paste0(organisms[i], "_ID")]] == protein_id[i],]
SNP <- table[[paste0(organisms[i], "_aapos")]]
gene1 <- GenomicRanges::GRanges("chr1", IRanges(SNP, width=1, names=paste0(table[[paste0(organisms[i], "_from")]],
table[[paste0(organisms[i], "_aapos")]],
table[[paste0(organisms[i], "_to")]])))
gene1$border <- sample(c("gray30"), length(SNP), replace=TRUE)
gene1.rot <- gene1
gene1.rot$label.parameter.rot <- 45
gene1.rot$SNPsideID<-"top"
features1 <- GenomicRanges::GRanges("chr1", IRanges(start=c(1, info$tbl$pfam_start, info$len),
width=c(0, info$tbl$pfam_end-info$tbl$pfam_start, 0),
names=c("", info$dom, "")))
features1$fill <- c("#FF1F5B", colors[1:length(info$tbl$pfam_start)], "#009ADE")
features1$height <- c(0, rep(0.2, length(info$tbl$pfam_start)), 0)
glist[i]<-gene1.rot
flist[i]<-features1
trackViewer::lolliplot(glist,
flist,
yaxis=FALSE, ylab = protein_id, type = "pie")
table<-tbl
drawProt<-function(table, protein_id, organisms){
glist<-list()
flist<-list()
for(i in 1:length(protein_id)){
info<-getinfo(protid = protein_id[i], organism = organisms[i])
colors<-c("#FF1F5B","#009ADE")
table<-table[table[[paste0(organisms[i], "_ID")]] == protein_id[i],]
SNP <- table[[paste0(organisms[i], "_aapos")]]
gene1 <- GenomicRanges::GRanges("chr1", IRanges(SNP, width=1, names=paste0(table[[paste0(organisms[i], "_from")]],
table[[paste0(organisms[i], "_aapos")]],
table[[paste0(organisms[i], "_to")]])))
gene1$border <- sample(c("gray30"), length(SNP), replace=TRUE)
gene1.rot <- gene1
gene1.rot$label.parameter.rot <- 45
gene1.rot$SNPsideID<-"top"
features1 <- GenomicRanges::GRanges("chr1", IRanges(start=c(1, info$tbl$pfam_start, info$len),
width=c(0, info$tbl$pfam_end-info$tbl$pfam_start, 0),
names=c("", info$dom, "")))
features1$fill <- c("#FF1F5B", colors[1:length(info$tbl$pfam_start)], "#009ADE")
features1$height <- c(0, rep(0.2, length(info$tbl$pfam_start)), 0)
glist[i]<-gene1.rot
flist[i]<-features1
}
trackViewer::lolliplot(glist,
flist,
yaxis=FALSE, ylab = protein_id, type = "pie")
}
orthoVar::drawProt(tbl, c("NP_004320", "NP_495271"), c("Homo sapiens", "Caenorhabditis elegans"))
tbl<-structure(list(`Homo sapiens_ID` = c("NP_004320", "NP_004320",
"NP_004320"), `Homo sapiens_aapos` = c(34L, 34L, 220L), `Homo sapiens_from` = c("G",
"G", "S"), `Homo sapiens_to` = c("G", "R", "P"), `Caenorhabditis elegans_ID` = c("NP_495271",
"NP_495271", "NP_495271"), `Caenorhabditis elegans_aapos` = c(41L,
41L, 251L), `Caenorhabditis elegans_from` = c("G", "G", "S"),
`Caenorhabditis elegans_to` = c("E", "E", "F"), msa_id = c(44132,
44132, 44132)), .internal.selfref = "<pointer: 0x55bf15d88350>", row.names = c(NA,
-3L), class = c("data.table", "data.frame"))
orthoVar::drawProt(tbl, c("NP_004320", "NP_495271"), c("Homo sapiens", "Caenorhabditis elegans"))
devtools::document()
devtools::install_github("mustafapir/orthoVar")
devtools::install_github("mustafapir/orthoVar")
orthoVar::drawProt(tbl, c("NP_004320", "NP_495271"), c("Homo sapiens", "Caenorhabditis elegans"))
tbl<-structure(list(`Homo sapiens_ID` = c("NP_004320", "NP_004320",
"NP_004320"), `Homo sapiens_aapos` = c(34L, 34L, 220L), `Homo sapiens_from` = c("G",
"G", "S"), `Homo sapiens_to` = c("G", "R", "P"), `Caenorhabditis elegans_ID` = c("NP_495271",
"NP_495271", "NP_495271"), `Caenorhabditis elegans_aapos` = c(41L,
41L, 251L), `Caenorhabditis elegans_from` = c("G", "G", "S"),
`Caenorhabditis elegans_to` = c("E", "E", "F"), msa_id = c(44132,
44132, 44132)), .internal.selfref = "<pointer: 0x55bf15d88350>", row.names = c(NA,
-3L), class = c("data.table", "data.frame"))
orthoVar::drawProt(tbl, c("NP_004320", "NP_495271"), c("Homo sapiens", "Caenorhabditis elegans"))
library(GenomicRanges)
orthoVar::drawProt(tbl, c("NP_004320", "NP_495271"), c("Homo sapiens", "Caenorhabditis elegans"))
devtools::document()
devtools::document()
setwd("C:/Users/phago/Desktop")
tbl<-readRDS("tbl.RDS")
shortnames<-function(species1, species){
allsp<-c(species1, species)
gsub('(\\b\\pL).*? ', '\\L\\1', allsp, perl = TRUE)
}
getinfo<-function(protid, organism){
sh<-shortnames(organism, "")
mart <- biomaRt::useEnsembl("ensembl", paste0(sh[1], "_gene_ensembl"))
bm<-biomaRt::getBM(c("uniprotswissprot","refseq_peptide","pfam","pfam_start","pfam_end"), "refseq_peptide", protid, mart)
url <- paste0("http://pfam.xfam.org/protein/", unique(bm$uniprotswissprot))
len <- url %>%
rvest::read_html() %>%
rvest::html_nodes(xpath='//*[@id="proteinSummaryBlock"]/div[2]/table[1]/tbody/tr[3]/td[2]')
len<-as.numeric(gsub("[^0-9]", "", len, perl = TRUE))
url <- paste0("http://pfam.xfam.org/family/", unique(bm$pfam))
dom<-c()
for(i in 1:length(url)){
domx <- url[i] %>%
rvest::read_html() %>%
rvest::html_nodes(xpath='//*[@id="tabTitle"]/h1/em') %>%
as.character() %>%
stringr::str_extract("(?<=>)(.*?)(?=<)")
dom<-c(dom, domx)
}
list(tbl = bm, len = len, dom = dom)
}
drawProt<-function(table, protein_id, organisms){
glist<-list()
flist<-list()
table1<-table[table[[paste0(organisms[1], "_ID")]] == protein_id[1] & table[[paste0(organisms[2], "_ID")]] == protein_id[2],]
for(i in 1:length(protein_id)){
info<-getinfo(protid = protein_id[i], organism = organisms[i])
colors<-c("#FF1F5B","#009ADE")
SNP <- table1[[paste0(organisms[i], "_aapos")]]
gene1 <- GenomicRanges::GRanges("chr1", IRanges(SNP, width=1, names=paste0(table1[[paste0(organisms[i], "_from")]],
table1[[paste0(organisms[i], "_aapos")]],
table1[[paste0(organisms[i], "_to")]])))
gene1$border <- sample(c("gray30"), length(SNP), replace=TRUE)
gene1.rot <- gene1
gene1.rot$label.parameter.rot <- 45
gene1.rot$SNPsideID<-"top"
features1 <- GenomicRanges::GRanges("chr1", IRanges(start=c(1, info$tbl$pfam_start, info$len),
width=c(0, info$tbl$pfam_end-info$tbl$pfam_start, 0),
names=c("", info$dom, "")))
features1$fill <- c("#FF1F5B", colors[1:length(info$tbl$pfam_start)], "#009ADE")
features1$height <- c(0, rep(0.2, length(info$tbl$pfam_start)), 0)
glist[i]<-gene1.rot
flist[i]<-features1
}
trackViewer::lolliplot(glist,
flist,
yaxis=FALSE, ylab = protein_id, type = "pie")
}
table<-tbl
protein_id<-c("NP_004320", "NP_495271")
organisms<-c("Homo sapiens", "Caenorhabditis elegans")
glist<-list()
flist<-list()
table1<-table[table[[paste0(organisms[1], "_ID")]] == protein_id[1] & table[[paste0(organisms[2], "_ID")]] == protein_id[2],]
for(i in 1:length(protein_id)){
info<-getinfo(protid = protein_id[i], organism = organisms[i])
colors<-c("#FF1F5B","#009ADE")
SNP <- table1[[paste0(organisms[i], "_aapos")]]
gene1 <- GenomicRanges::GRanges("chr1", IRanges(SNP, width=1, names=paste0(table1[[paste0(organisms[i], "_from")]],
table1[[paste0(organisms[i], "_aapos")]],
table1[[paste0(organisms[i], "_to")]])))
gene1$border <- sample(c("gray30"), length(SNP), replace=TRUE)
gene1.rot <- gene1
gene1.rot$label.parameter.rot <- 45
gene1.rot$SNPsideID<-"top"
features1 <- GenomicRanges::GRanges("chr1", IRanges(start=c(1, info$tbl$pfam_start, info$len),
width=c(0, info$tbl$pfam_end-info$tbl$pfam_start, 0),
names=c("", info$dom, "")))
features1$fill <- c("#FF1F5B", colors[1:length(info$tbl$pfam_start)], "#009ADE")
features1$height <- c(0, rep(0.2, length(info$tbl$pfam_start)), 0)
glist[i]<-gene1.rot
flist[i]<-features1
}
library(magrittr)
for(i in 1:length(protein_id)){
info<-getinfo(protid = protein_id[i], organism = organisms[i])
colors<-c("#FF1F5B","#009ADE")
SNP <- table1[[paste0(organisms[i], "_aapos")]]
gene1 <- GenomicRanges::GRanges("chr1", IRanges(SNP, width=1, names=paste0(table1[[paste0(organisms[i], "_from")]],
table1[[paste0(organisms[i], "_aapos")]],
table1[[paste0(organisms[i], "_to")]])))
gene1$border <- sample(c("gray30"), length(SNP), replace=TRUE)
gene1.rot <- gene1
gene1.rot$label.parameter.rot <- 45
gene1.rot$SNPsideID<-"top"
features1 <- GenomicRanges::GRanges("chr1", IRanges(start=c(1, info$tbl$pfam_start, info$len),
width=c(0, info$tbl$pfam_end-info$tbl$pfam_start, 0),
names=c("", info$dom, "")))
features1$fill <- c("#FF1F5B", colors[1:length(info$tbl$pfam_start)], "#009ADE")
features1$height <- c(0, rep(0.2, length(info$tbl$pfam_start)), 0)
glist[i]<-gene1.rot
flist[i]<-features1
}
for(i in 1:length(protein_id)){
info<-getinfo(protid = protein_id[i], organism = organisms[i])
colors<-c("#FF1F5B","#009ADE")
SNP <- table1[[paste0(organisms[i], "_aapos")]]
gene1 <- GenomicRanges::GRanges("chr1", IRanges::IRanges(SNP, width=1, names=paste0(table1[[paste0(organisms[i], "_from")]],
table1[[paste0(organisms[i], "_aapos")]],
table1[[paste0(organisms[i], "_to")]])))
gene1$border <- sample(c("gray30"), length(SNP), replace=TRUE)
gene1.rot <- gene1
gene1.rot$label.parameter.rot <- 45
gene1.rot$SNPsideID<-"top"
features1 <- GenomicRanges::GRanges("chr1", IRanges::IRanges(start=c(1, info$tbl$pfam_start, info$len),
width=c(0, info$tbl$pfam_end-info$tbl$pfam_start, 0),
names=c("", info$dom, "")))
features1$fill <- c("#FF1F5B", colors[1:length(info$tbl$pfam_start)], "#009ADE")
features1$height <- c(0, rep(0.2, length(info$tbl$pfam_start)), 0)
glist[i]<-gene1.rot
flist[i]<-features1
}
glist
flist
trackViewer::lolliplot(glist,
flist,
yaxis=FALSE, ylab = protein_id, type = "pie")
setwd("D:/Mustafa/R packages/orthoVar")
devtools::document()
devtools::document()
fib<-function(n) {
if (n <= 2) {
return(1)
}
else {
a0 = 1
a1 = 1
a = c(a0, a1)
for (i in 1:(n-2)) {
a = c(a0, a1, a[length(a)]+a[length(a)-1])
}
return(a)
}
}
fib(5)
fib<-function(n) {
if (n <= 2) {
return(1)
}
else {
a0 = 1
a1 = 1
a = c(a0, a1)
for (i in 1:(n-2)) {
a = c(a, a[length(a)]+a[length(a)-1])
}
return(a)
}
}
fib(5)
fib(50)
fib<-function(n) {
if (n <= 2) {
return(1)
}
else {
a0 = 1
a1 = 1
a = c(a0, a1)
for (i in 1:(n-2)) {
a = c(a, a[length(a)]+a[length(a)-1])
}
return(a[length(a)])
}
}
fib(50)
fib(8)
fib<-function(n) {
if (n <= 2) {
return(1)
}
else {
a = c(1, 1)
for (i in 1:(n-2)) {
a = c(a, a[length(a)]+a[length(a)-1])
}
return(a[length(a)])
}
}
fib(8)
fib(100)
fib(100000)
fib(10000)
fib(1000)
library(readxl)
ex<-read_xlsx("Table_13.xlsx")
View(ex)
ex_mouse<-ex[,c(3,5)]
ex_human<-ex[,c(2,4)]
library(stringr)
ex_human1<-str_split(ex_human$Human_Variation, "\\d+", simplify = T)
View(ex_human1)
ex_human<-cbind(ex_human, ex_human1)
View(ex_human)
ex_human$aapos<-str_extract_all(ex_human$Human_Variation, "\\d+", simplify = TRUE)[,1]
ex_human$aapos<-as.numeric(str_extract_all(ex_human$Human_Variation, "\\d+", simplify = TRUE)[,1])
ex_human<-ex_human[,c(1,3,4,5)]
colnames(ex_human)<-c("Refseq_ID", "from", "to", "aapos")
ex_mouse1<-str_split(ex_mouse$Mouse_Variation, "\\d+", simplify = T)
ex_mouse<-cbind(ex_mouse, ex_mouse1)
ex_mouse$aapos<-as.numeric(str_extract_all(ex_mouse$Mouse_Variation, "\\d+", simplify = TRUE)[,1])
ex_mouse<-ex_mouse[,c(1,3,4,5)]
colnames(ex_mouse)<-c("Refseq_ID", "from", "to", "aapos")
View(ex_mouse)
write.table("human_variants.txt", quote = FALSE, row.names = FALSE, sep = "\t")
write.table(ex_human, "human_variants.txt", quote = FALSE, row.names = FALSE, sep = "\t")
write.table(ex_mouse, "mouse_variants.txt", quote = FALSE, row.names = FALSE, sep = "\t")
devtools::document()
remove.packages("cli")
install.packages("cli")
install.packages("cli")
install.packages("cli")
install.packages("cli")
devtools::document()
